
rm(list = ls())
library(Seurat)
library(msigdbr)
library(dplyr)
library(tidyr)
library(ggplot2)
library(tidyverse)
library(ggpubr)

load(file = "stepout/Epi_data_AN.Rdata")
Epi_data <- JoinLayers(Epi_data)
DefaultAssay(Epi_data) <- "SCT"

load(file = "stepout/Fib_data.Rdata")
Fib_data <- JoinLayers(Fib_data)
DefaultAssay(Fib_data) <- "SCT"

igf1r_expr <- FetchData(Epi_data,
                        vars = c("IGF1R", "tissue"),
                        slot = "data")
igf1r_expr$cell_type <- Idents(Epi_data)
igf1r_filtered <- igf1r_expr %>%
  filter(cell_type %in% c("B_Luminal", "M_Luminal")) %>%
  filter(tissue %in% c("Adjacent", "Tumor"))
igf1r_filtered$group <- paste(igf1r_filtered$tissue,
                              igf1r_filtered$cell_type,
                              sep = "_")
igf1r_filtered <- igf1r_filtered %>%
  filter(group != "Adjacent_M_Luminal")
table(igf1r_filtered$group)
avg_expr <- igf1r_filtered %>%
  group_by(group) %>%
  summarise(
    mean_IGF1R = mean(IGF1R),
    sd_IGF1R = sd(IGF1R),
    n = n(),
    se = sd(IGF1R)/sqrt(n())
  )
print("=== 各组IGF1R平均表达量 ===")
print(avg_expr)
pairwise_results <- pairwise.wilcox.test(
  igf1r_filtered$IGF1R,
  igf1r_filtered$group,
  p.adjust.method = "BH"
)
print("=== 两两比较Wilcoxon检验结果 ===")
print(pairwise_results)
p1 <- ggplot(igf1r_filtered, aes(x = group, y = IGF1R, fill = group)) +
  geom_boxplot(alpha = 0.7) +
  geom_jitter(width = 0.2, alpha = 0.3, size = 0.5) +
  stat_compare_means(comparisons = list(
    c("Adjacent_B_Luminal", "Tumor_B_Luminal"),
    c("Adjacent_B_Luminal", "Tumor_M_Luminal"),
    c("Tumor_B_Luminal", "Tumor_M_Luminal")
  ), method = "wilcox.test") +
  theme_classic() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  labs(title = "IGF1R Expression across Groups (3 Groups)",
       x = "Group",
       y = "IGF1R Expression (Normalized)")
print(p1)

comparisons <- list(
  c("Adjacent_B_Luminal", "Tumor_B_Luminal"),
  c("Adjacent_B_Luminal", "Tumor_M_Luminal"),
  c("Tumor_B_Luminal", "Tumor_M_Luminal")
)
p_values <- c()
for(comp in comparisons) {
  group1_data <- igf1r_filtered$IGF1R[igf1r_filtered$group == comp[1]]
  group2_data <- igf1r_filtered$IGF1R[igf1r_filtered$group == comp[2]]
  wilcox_result <- wilcox.test(group1_data, group2_data)
  p_values <- c(p_values, wilcox_result$p.value)
}
p_values_adj <- p.adjust(p_values, method = "BH")
format_p <- function(p) {
  if (p < 0.001) return("***")
  if (p < 0.01) return("**")
  if (p < 0.05) return("*")
  return("ns")
}
p_labels <- sapply(p_values_adj, format_p)

p2 <- ggplot(avg_expr, aes(x = group, y = mean_IGF1R, fill = group)) +
  geom_bar(stat = "identity", alpha = 0.7, color = "black", size = 0.3) +
  geom_errorbar(aes(ymin = mean_IGF1R - se, ymax = mean_IGF1R + se),
                width = 0.2) +
  geom_text(aes(label = round(mean_IGF1R, 3)),
            vjust = -0.5, hjust = 0.5, size = 3) +
  annotate("segment", x = 1, xend = 2, y = 1.0, yend = 1.0, color = "black") +
  annotate("segment", x = 1, xend = 1, y = 0.95, yend = 1.0, color = "black") +
  annotate("segment", x = 2, xend = 2, y = 0.95, yend = 1.0, color = "black") +
  annotate("text", x = 1.5, y = 1.02, label = p_labels[1], size = 3) +
  annotate("segment", x = 1, xend = 3, y = 1.1, yend = 1.1, color = "black") +
  annotate("segment", x = 1, xend = 1, y = 1.05, yend = 1.1, color = "black") +
  annotate("segment", x = 3, xend = 3, y = 1.05, yend = 1.1, color = "black") +
  annotate("text", x = 2, y = 1.12, label = p_labels[2], size = 3) +
  annotate("segment", x = 2, xend = 3, y = 1.2, yend = 1.2, color = "black") +
  annotate("segment", x = 2, xend = 2, y = 1.15, yend = 1.2, color = "black") +
  annotate("segment", x = 3, xend = 3, y = 1.15, yend = 1.2, color = "black") +
  annotate("text", x = 2.5, y = 1.22, label = p_labels[3], size = 3) +
  scale_y_continuous(limits = c(0, 1.3), expand = c(0, 0)) +
  theme_classic() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  labs(title = "Average IGF1R Expression with Statistical Comparisons",
       x = "Group",
       y = "Mean IGF1R Expression")
print(p2)

library(ggsignif)
p2_alt <- ggplot(avg_expr, aes(x = group, y = mean_IGF1R, fill = group)) +
  geom_bar(stat = "identity", alpha = 0.7, color = "black", size = 0.3) +
  geom_errorbar(aes(ymin = mean_IGF1R - se, ymax = mean_IGF1R + se),
                width = 0.2) +
  geom_text(aes(label = round(mean_IGF1R, 3)),
            vjust = -0.5, hjust = 0.5, size = 3) +
  geom_signif(
    comparisons = comparisons,
    annotations = p_labels,
    step_increase = 0.1,
    tip_length = 0.01,
    textsize = 3,
    y_position = c(1.0, 1.1, 1.2)
  ) +
  scale_y_continuous(limits = c(0, 1.3), expand = c(0, 0)) +
  theme_classic() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  labs(title = "Average IGF1R Expression with Statistical Comparisons",
       x = "Group",
       y = "Mean IGF1R Expression")
print(p2_alt)

print("=== 统计比较结果 ===")
for(i in 1:length(comparisons)) {
  cat(paste0(comparisons[[i]][1], " vs ", comparisons[[i]][2],
             ": p = ", format(p_values[i], digits = 3),
             " (adjusted: ", format(p_values_adj[i], digits = 3),
             ", ", p_labels[i], ")\n"))
}

M_Luminal_data <- subset(Epi_data, idents = "M_Luminal")
calcium_genes <- msigdbr(species = "Homo sapiens",
                         category = "C5",
                         subcategory = "GO:CC") %>%
  filter(grepl("CALCIUM", gs_name)) %>%
  dplyr::select(gene_symbol, gs_name)
calcium_gene_sets <- split(calcium_genes$gene_symbol, calcium_genes$gs_name)
igf1r_expr <- GetAssayData(M_Luminal_data, assay = "RNA")["IGF1R",]
gocc_stats <- data.frame()
for(set_name in names(calcium_gene_sets)) {
  genes <- calcium_gene_sets[[set_name]]
  genes_in_data <- intersect(genes, rownames(GetAssayData(M_Luminal_data, assay = "RNA")))
  if(length(genes_in_data) >= 3) {
    set_avg_expr <- colMeans(GetAssayData(M_Luminal_data, assay = "RNA")[genes_in_data,])
    cor_test <- cor.test(igf1r_expr, set_avg_expr, method = "spearman")
    display_name <- gsub("GOCC_", "", set_name)
    gocc_stats <- rbind(gocc_stats,
                        data.frame(gene_set = display_name,
                                  original_name = set_name,
                                  correlation = cor_test$estimate,
                                  p_value = cor_test$p.value,
                                  avg_expr = mean(set_avg_expr),
                                  gene_count = length(genes_in_data)))
  }
}
gocc_stats$p_adj <- p.adjust(gocc_stats$p_value, method = "BH")
gocc_stats$log10_p <- -log10(gocc_stats$p_adj)
gocc_stats$significant <- gocc_stats$p_adj < 0.05
if(nrow(gocc_stats) > 15) {
  gocc_stats <- gocc_stats %>%
    arrange(desc(abs(correlation))) %>%
    head(15)
}
p <- ggplot(gocc_stats, aes(x = correlation, y = reorder(gene_set, correlation))) +
  geom_point(aes(size = log10_p, color = correlation)) +
  scale_color_gradient2(low = "#376795", mid = "#f8ac8c", high = "#e76254",
                      midpoint = median(gocc_stats$correlation),
                      name = "Correlation") +
  scale_size_continuous(range = c(3, 10), name = "-log10(p-adj)") +
  theme_minimal() +
  theme(
    legend.position = "right",
    plot.title = element_text(face = "bold"),
    axis.title.y = element_blank(),
    axis.text.y = element_text(size = 11)
  ) +
  geom_vline(xintercept = 0, linetype = "dashed", color = "grey50") +
  labs(
    title = "IGF1R与GO:CC钙离子基因集平均表达的相关性",
    subtitle = paste0("分析了", nrow(gocc_stats), "个GO:CC钙离子相关基因集"),
    x = "Spearman相关系数"
  )
ggsave(plot = p,filename = "F2E.pdf",path="stepout/",width =30,height = 15, units = "cm")
