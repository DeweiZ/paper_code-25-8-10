
```r
library(GEOquery)
library(stringr)
library(tidyr)
library(tibble)
library(dplyr)
library(limma)
library(FactoMineR)
library(factoextra) 
library(pheatmap)
library(ggplot2)
library(paletteer)
library(ggpubr)
library(ggthemes)
library(clusterProfiler)
library(org.Hs.eg.db)

rm(list = ls())
gse_number = "GSE134073"
eSet <- getGEO(gse_number, 
               destdir = '.', 
               getGPL = F)
eSet = eSet[[1]]
exp<- readRDS("input/exp.RDS")
exp <- log2(exp)

Ensembl_ID <- rownames(exp)
gene_symbol <- bitr(Ensembl_ID, fromType="ENSEMBL", toType=c("SYMBOL", "ENTREZID"), OrgDb="org.Hs.eg.db")
data=data.frame(gene_symbol,exp[match(gene_symbol$ENSEMBL,rownames(exp)),])
data<- data %>% distinct(SYMBOL, .keep_all = T)
data[data==-Inf] <- 0
row.names(data)<- data$SYMBOL
exp<- data[,-c(1:3)]
exp[1:4,1:4]
boxplot(exp)
pd <- pData(eSet)
pd<- pd[!grepl("f", pd$`risk group:ch1`),]
p = identical(rownames(pd),colnames(exp));p
if(!p) exp = exp[,match(rownames(pd),colnames(exp))]
gpl_number <- eSet@annotation
ids <- data[,1:3]
save(gse_number,pd,exp,gpl_number,ids,file = "stepout/step1output.Rdata")

colnames(exp) <- pd$`diagnosis:ch1`
write.csv(exp,"stepout/PCa_exp.csv")

rm(list = ls()) 
load(file = "stepout/step1output.Rdata")
Group=ifelse(str_detect(pd$`diagnosis:ch1`,"benign prostate hyperplasia"),"BPH","PCa")
Group = factor(Group,levels = c("BPH","PCa"))
save(exp,Group,ids,gse_number,file = "stepout/step2output.Rdata")

rm(list = ls()) 
load(file = 'stepout/step1output.Rdata')
load(file = 'stepout/step2output.Rdata')
dat <- exp
dat[1:4,1:4]
table(Group)
g=Group
g=relevel(g,'BPH')
design=model.matrix(~g)
batch=pd$`risk group:ch1`
batch=factor(batch)
batch
dat[1:4,1:4]
ex_b_limma <- removeBatchEffect(dat,
                                batch = batch,
                                design = design)
dim(ex_b_limma)
ex_b_limma[1:4,1:4]

dat=as.data.frame(t(ex_b_limma))

dat.pca <- PCA(dat, graph = FALSE)
pca_plot <- fviz_pca_ind(dat.pca,
                         geom.ind = "point", 
                         col.ind = Group, 
                         palette = c("#376795", "#e76254"),
                         addEllipses = TRUE, 
                         legend.title = "Groups"
)
pca_plot
ggsave(plot = pca_plot,filename = paste0(gse_number,"_PCA.pdf"),path="stepout/",width = 12,height = 10, units = "cm")

rm(list = ls()) 
load(file = "stepout/step2output.Rdata")
design=model.matrix(~Group)
fit=lmFit(exp,design)
fit=eBayes(fit)
deg=topTable(fit,coef=2,number = Inf)

deg <- mutate(deg,probe_id=rownames(deg))
head(deg)
deg <- merge(deg,ids, by.x="probe_id", by.y="SYMBOL")
head(deg)

logFC_t=1
P.Value_t = 0.05
k1 = (deg$P.Value < P.Value_t)&(deg$logFC < -logFC_t)
k2 = (deg$P.Value < P.Value_t)&(deg$logFC > logFC_t)
deg <- mutate(deg,change = ifelse(k1,"down",ifelse(k2,"up","stable")))
table(deg$change)

save(Group,deg,logFC_t,P.Value_t,gse_number,file = "stepout/step4output.Rdata")

p <- ggplot(data = deg, 
            aes(x = logFC, 
                y = -log10(P.Value))) +
  geom_point(alpha=0.4, size=3.5, 
             aes(color=change)) +
  ylab("-log10(Pvalue)")+
  scale_color_manual(values=c("#376795", "grey","#e76254"))+
  geom_vline(xintercept=c(-logFC_t,logFC_t),lty=4,col="black",lwd=0.8) +
  geom_hline(yintercept = -log10(P.Value_t),lty=4,col="black",lwd=0.8) +
  theme_bw();p

ggsave(plot = p,filename = paste0(gse_number,"_VCO.pdf"),path="stepout/",width = 12.5,height = 10, units = "cm")

rm(list = ls()) 
library(msigdbr)
library(enrichplot)
library(tinyarray)
library(VennDiagram)
load(file = "stepout/step4output.Rdata")
deg_PCa <- deg[!deg$change =="stable",]

bulk_all <- enrichGO(deg_PCa$ENTREZID,
              OrgDb = 'org.Hs.eg.db',
              keyType = "ENTREZID",
              ont = "ALL",
              pvalueCutoff = 0.05,
              qvalueCutoff = 0.05,
              readable = T)

dat_GO_PCa <- bulk_all@result %>% filter(pvalue<0.05) 
dat_GO_PCa <- dat_GO_PCa [order(dat_GO_PCa $Count,decreasing = T),]

write.csv(dat_GO_PCa,file="stepout/dat_GO_PCa.csv")

go_CC <- dat_GO_PCa[dat_GO_PCa$ONTOLOGY=="CC",][1:15,]

go_plot <- ggplot(go_CC,aes(x=reorder(Description, Count), y = Count,fill = pvalue)) +
    geom_bar(stat = "identity",width=0.8) +
    coord_flip() +
    scale_fill_gradient(low = "#e76254",high ="#376795" )+
    labs(x="", y="Count") +
    theme_pander()  +
    theme(panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),
          axis.line.x = element_line(size = 0.3, colour = "black"),
          axis.ticks.length.x = unit(-0.20, "cm"),
          axis.text.x = element_text(margin = margin(t = 0.3, unit = "cm")),
          axis.ticks.x = element_line(colour = "black",size = 0.3) ,                          
          axis.ticks.y = element_blank(),
          axis.text.y  = element_text(hjust=0),
          panel.background = element_rect(fill=NULL, colour = 'white')
          )
go_plot

ggsave(plot = go_plot ,filename = "F1D.pdf",path="stepout/",width = 16,height = 10, units = "cm")

dat_GO_PDT <- read.csv("stepout/dat_GO.csv",row.names = 1)

common_ids <- intersect(dat_GO_PCa$ID, dat_GO_PDT$ID)

result_PCa <- dat_GO_PCa[dat_GO_PCa$ID %in% common_ids, ]  

result_PDT <- dat_GO_PDT[dat_GO_PDT$ID %in% common_ids, ]  

deg_PDT<- read.csv("stepout/deg_PDT.csv",row.names = 1)

deg_P <- deg_PDT[deg_PDT$symbol%in%deg_PCa$probe_id,]
deg_P2 <- deg_PCa[deg_PCa$probe_id%in%deg_PDT$symbol,]
deg_PP <- merge(deg_P,deg_PCa,by.x="symbol",by.y = "probe_id")
deg_PP <- deg_PP[,c(1,2,9,11,19)]

colnames(deg_PP) <- c("Gene","LogFC_PDT","Change_PDT","LogFC_PCa","Change_PCa")
A <- deg_PDT$symbol
B <- deg_PCa$probe_id

write.csv(deg_PP,file = "stepout/deg_PP.csv")
write.csv(deg_PCa,file = "stepout/deg_PCa.csv")

venn.plot <- venn.diagram(
  list(GSE84756=A,GSE134073=B),
  filename = "stepout/GSE_DEGsvenn.tiff",
  lty = 1,
  lwd = 1,
  col = c("#e76254","#376795"),  
  fill = c("#e76254","#376795"),
  alpha = 0.60,
  cat.col = "black",
  cat.cex = 0.8,
  cat.fontface = "bold",
  margin = 0.07,
  cex = 0.8,scaled = FALSE,
  disable.logging = T
)

rm(list = ls()) 
pdt_exp <- read.csv("stepout/pdt_exp.csv",row.names = 1)
pca_exp <- read.csv("stepout/PCa_exp.csv",row.names = 1)
deg_PP <- read.csv(file = "stepout/deg_PP.csv",row.names = 1)

pca_exp <- pca_exp[row.names(pca_exp)%in%deg_PP$Gene,]
pdt_exp <- pdt_exp[row.names(pdt_exp)%in%deg_PP$Gene,]
pca_exp <- cbind(pca_exp,rowMeans(pca_exp))
pca_exp <- as.data.frame(apply(pca_exp,2,function(x){x-pca_exp[,49]})[,-49])

pdt_exp  <- cbind(pdt_exp ,rowMeans(pdt_exp))
pdt_exp  <- as.data.frame(apply(pdt_exp ,2,function(x){x-pdt_exp[,19]})[,-19])
pca_exp$gene <- rownames(pca_exp)
pdt_exp$gene <- rownames(pdt_exp)
deg_exp <- merge(pca_exp,pdt_exp,by.x= "gene",by.y ="gene")
row.names(deg_exp) <- deg_exp$gene
deg_exp <- deg_exp[,-1]
deg_exp <- as.matrix(deg_exp)

colnames(deg_exp)
Group1 = ifelse(str_detect(colnames(deg_exp),"hyperplasia"),"BPH",
                ifelse(str_detect(colnames(deg_exp),"cancer"),"PCa",
                       ifelse(str_detect(colnames(deg_exp),"Control"),"Control","PDT"))
                       )
Group1 = factor(Group1,levels = c("Control","PDT","BPH","PCa"))

library(ComplexHeatmap)
library(circlize)

col = colorRamp2(breaks = c(-2, 0, 2),colors = c('#376795',"#eeeeee", '#e76254'))

annotation_col = HeatmapAnnotation(cluster = anno_block(gp = gpar(fill = c("Control"="#72bcd5",'BPH'='#376795','PCa'='#e76254',"PDT"= "#F9B0A4")),
                       labels = c("PDT","BPH","PCa","Control"),
                       labels_gp = gpar(col = "black", fontsize = 12)))

pdf(file = "heapmap.pdf",width=10, height=4)
Heatmap(deg_exp,
        col = col,
        show_row_names = T,
        top_annotation = annotation_col,
        column_split = Group1, 
        column_title = NULL,
        show_column_names = F,
        cluster_rows = T,
        show_column_dend = FALSE, 
        show_row_dend = FALSE
        )

dev.off()

tdata <- as.data.frame(deg_exp)
tdata[12,] <- Group1
tdata <- as.data.frame(t(tdata[c(6,12),]))
colnames(tdata)[2] <- 'Group'
tdata$RGS2
tdata$Group

tdata$RGS2 <- as.numeric(tdata$RGS2)

tdata_ctrl_pdt <- tdata[tdata$Group %in% c("Control", "PDT"), ]

p1 = ggplot(tdata_ctrl_pdt, aes(x = Group, y = RGS2, color = Group)) +
  geom_boxplot(size = 1, width = 0.5) + 
  xlab("Group") +
  ylab("RGS2_Expression") +
  scale_color_manual(values = c('Control' = '#376795', 'PDT' = '#e76254')) +
  theme_classic() +
  stat_compare_means(comparisons = list(c("Control", "PDT")))

p1

ggsave(plot = p1, filename = "Control_PDT_boxplot.pdf", path = "stepout/", 
       width = 8, height = 10, units = "cm")

tdata_bph_pca <- tdata[tdata$Group %in% c("BPH", "PCa"), ]

p2 = ggplot(tdata_bph_pca, aes(x = Group, y = RGS2, color = Group)) +
  geom_boxplot(size = 1, width = 0.5) + 
  xlab("Group") +
  ylab("RGS2_Expression") +
  scale_color_manual(values = c('BPH' = '#376795', 'PCa' = '#e76254')) +
  theme_classic() +
  stat_compare_means(comparisons = list(c("BPH", "PCa")))

p2

ggsave(plot = p2, filename = "BPH_PCa_boxplot.pdf", path = "stepout/", 
       width = 8, height = 10, units = "cm")
```
